package com.example.tests;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import org.testng.Assert;
import org.testng.annotations.Test;


public class GroupCreationTests extends TestBase {
	
	public Iterator<Object[]> randomTestGroupGenerator() {
		List<Object[]> list = new ArrayList<Object[]>();
		
		for(int i=1; i<5; i++);{
			GroupData group = new GroupData();
			group.name  = generateRandovString();		
			group.footer  = generateRandovString();		
			group.header  = generateRandovString();		
							 
			list.add(new Object[]{group});
		}
		return list.iterator();
	}
	
	public String generateRandovString(){
		Random rnd = new Random();	
	if(rnd.nextInt(7) == 0){
		return  "";		
	} else {
		return  "test" + rnd.nextInt();
	}
	}
   @Test(dataProvider = "randomTestGroupGenerator")
  public void testValidDataGroupCreation(GroupData group) throws Exception {
    app.getNavigatioHelper().openMainPage();
    app.getNavigatioHelper().openGroupsPage();
    
    //save old state
    
    List<GroupData> oldList = app.getGroupHelper().getGroups();
    //actions
    app.getGroupHelper().initGroupCreation();
   	app.getGroupHelper().fillGroupForm(group);
    app.getGroupHelper().submitGroupCriation();
    app.getGroupHelper().returnToGroupsPage();
    //save new state
    List<GroupData> newList = app.getGroupHelper().getGroups();
    // compare state
    
    oldList.add(group);
    Collections.sort(oldList);
    Assert.assertEquals(newList, oldList);
  }


}
