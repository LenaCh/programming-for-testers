package com.example.tests;

import static org.junit.Assert.fail;

import java.util.concurrent.TimeUnit;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.NoAlertPresentException;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeTest;


import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

public class ContactCreationTests {
  private WebDriver driver;
  private static String baseUrl;
  private static boolean acceptNextAlert = true;
  private static StringBuffer verificationErrors = new StringBuffer();

  @BeforeTest
	public void setUp() throws Exception {
	    driver = new FirefoxDriver();
	    baseUrl = "http://localhost/";
	    driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
	  }
	
  @Test
  public void ContactNonEmptyCreationTests() throws Exception {
	openMainPage();
	initNewContactCreation();
    fillGontactDetailsForm("Petrov", "Ivan", "Saint-Petersburg", "8-812-555-55-55", "+7921-651235", "8-812-666-66-66", "petrov@mm.ru", "petrov2@mm.ru", "1986", "Saint-Petersburg Nevskiy pr.", "8");
    selectDetailsFromContactCraetionForm();
    
  }

public void openMainPage() {
		  driver.get(baseUrl + "/addressbookv4.1.4/");
}
  @Test
  public void ContactEmptyCreationTests1() throws Exception {
	openMainPage();
	initNewContactCreation();
    fillGontactDetailsForm("", "", "", "", "", "", "", "", "", "", "");
    selectDetailsFromContactCraetionForm();
    
  }
   public void selectDetailsFromContactCraetionForm() {
	new Select(driver.findElement(By.name("bday"))).selectByVisibleText("16");
    new Select(driver.findElement(By.name("bmonth"))).selectByVisibleText("August");
    new Select(driver.findElement(By.name("new_group"))).selectByVisibleText("footer 1");
}

   public void fillGontactDetailsForm(String firstName, String lastName, String address, String homePhone, String mobilePhone, String workPhone, String email, String email2, String year, String address2, String phone2) {
    driver.findElement(By.name("firstname")).clear();
    driver.findElement(By.name("firstname")).sendKeys(firstName);
    driver.findElement(By.name("lastname")).clear();
    driver.findElement(By.name("lastname")).sendKeys(lastName);
    driver.findElement(By.name("address")).clear();
    driver.findElement(By.name("address")).sendKeys(address);
    driver.findElement(By.name("home")).clear();
    driver.findElement(By.name("home")).sendKeys(homePhone);
    driver.findElement(By.name("mobile")).clear();
    driver.findElement(By.name("mobile")).sendKeys(mobilePhone);
    driver.findElement(By.name("work")).clear();
    driver.findElement(By.name("work")).sendKeys(workPhone);
    driver.findElement(By.name("email")).clear();
    driver.findElement(By.name("email")).sendKeys(email);
    driver.findElement(By.name("email2")).clear();
    driver.findElement(By.name("email2")).sendKeys(email2);
    driver.findElement(By.name("byear")).clear();
    driver.findElement(By.name("byear")).sendKeys(year);
    driver.findElement(By.name("address2")).clear();
    driver.findElement(By.name("address2")).sendKeys(address2);
    driver.findElement(By.name("phone2")).clear();
    driver.findElement(By.name("phone2")).sendKeys(phone2);
    driver.findElement(By.name("submit")).click();
    driver.findElement(By.linkText("home page")).click();
}

   public void initNewContactCreation() {
    driver.findElement(By.linkText("add new")).click();
}
   @AfterTest
	public void tearDown() throws Exception {
	    driver.quit();
	    String verificationErrorString = verificationErrors.toString();
	    if (!"".equals(verificationErrorString)) {
	      fail(verificationErrorString);
	    }
}
   private boolean isElementPresent(By by) {
	    try {
	      driver.findElement(by);
	      return true;
	    } catch (NoSuchElementException e) {
	      return false;
	    }
	  }

	private boolean isAlertPresent() {
	    try {
	      driver.switchTo().alert();
	      return true;
	    } catch (NoAlertPresentException e) {
	      return false;
	    }
	  }

	private String closeAlertAndGetItsText() {
	    try {
	      Alert alert = driver.switchTo().alert();
	      String alertText = alert.getText();
	      if (acceptNextAlert) {
	        alert.accept();
	      } else {
	        alert.dismiss();
	      }
	      return alertText;
	    } finally {
	      acceptNextAlert = true;
	    }
	  }
}
