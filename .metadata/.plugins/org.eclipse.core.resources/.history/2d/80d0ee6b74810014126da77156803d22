package com.example.tests;

import java.util.regex.Pattern;
import java.util.concurrent.TimeUnit;

import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.*;

import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

public class ContactCreationTests {
  private WebDriver driver;
  private String baseUrl;
  private boolean acceptNextAlert = true;
  private StringBuffer verificationErrors = new StringBuffer();

  @BeforeClass
  public void setUp() throws Exception {
    driver = new FirefoxDriver();
    baseUrl = "http://localhost/";
    driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
  }
  @Test
  public void testEmptyGroupCreation() throws Exception {
    openMainPage();
    nitNewContactCreation();
    String firstName = "Petrov";
	ContactData contact = new ContactData(firstName, "Ivan", "8-812-555-55-55", "8-921-5555555", "8-812-666-66-66", "petrov@mm.ru", "letrov@mm.ru", "1955", "Saint-Petersburg", "8");
	fillContactCreationForm(contact);
    selectContactDetailsFromContactCreationForm("17", "August", "footer 1");
    reternToMainPage();
  }
  @Test
  public void testNonEmptyGroupCreation() throws Exception {
    openMainPage();
    nitNewContactCreation();
    fillContactCreationForm(new ContactData("", "", "", "", "", "", "", "", "", ""));
      reternToMainPage();
  }
 
public void reternToMainPage() {
	driver.findElement(By.name("submit")).click();
    driver.findElement(By.linkText("home page")).click();
}

public void selectContactDetailsFromContactCreationForm(String day, String month, String group) {
	new Select(driver.findElement(By.name("bday"))).selectByVisibleText(day);
    new Select(driver.findElement(By.name("bmonth"))).selectByVisibleText(month);
    new Select(driver.findElement(By.name("new_group"))).selectByVisibleText(group);
}

public void fillContactCreationForm(ContactData contact) {
	driver.findElement(By.name("firstname")).clear();
    driver.findElement(By.name("firstname")).sendKeys(contact.firstName);
    driver.findElement(By.name("address")).clear();
    driver.findElement(By.name("address")).sendKeys(contact.lastName);
    driver.findElement(By.name("home")).clear();
    driver.findElement(By.name("home")).sendKeys(contact.homePhone);
    driver.findElement(By.name("mobile")).clear();
    driver.findElement(By.name("mobile")).sendKeys(contact.mobilePhome);
    driver.findElement(By.name("work")).clear();
    driver.findElement(By.name("work")).sendKeys(contact.workPhone);
    driver.findElement(By.name("email")).clear();
    driver.findElement(By.name("email")).sendKeys(contact.mail);
    driver.findElement(By.name("email2")).clear();
    driver.findElement(By.name("email2")).sendKeys(contact.mail2);
    driver.findElement(By.name("byear")).clear();
    driver.findElement(By.name("byear")).sendKeys(contact.year);
    driver.findElement(By.name("address2")).clear();
    driver.findElement(By.name("address2")).sendKeys(contact.address);
    driver.findElement(By.name("phone2")).clear();
    driver.findElement(By.name("phone2")).sendKeys(contact.home);
}

public void nitNewContactCreation() {
	driver.findElement(By.linkText("add new")).click();
}

public void openMainPage() {
		driver.get(baseUrl + "/addressbookv4.1.4/");
}

  @AfterClass
  public void tearDown() throws Exception {
    driver.quit();
    String verificationErrorString = verificationErrors.toString();
    if (!"".equals(verificationErrorString)) {
      fail(verificationErrorString);
    }
  }

  private boolean isElementPresent(By by) {
    try {
      driver.findElement(by);
      return true;
    } catch (NoSuchElementException e) {
      return false;
    }
  }

  private boolean isAlertPresent() {
    try {
      driver.switchTo().alert();
      return true;
    } catch (NoAlertPresentException e) {
      return false;
    }
  }

  private String closeAlertAndGetItsText() {
    try {
      Alert alert = driver.switchTo().alert();
      String alertText = alert.getText();
      if (acceptNextAlert) {
        alert.accept();
      } else {
        alert.dismiss();
      }
      return alertText;
    } finally {
      acceptNextAlert = true;
    }
  }
}
